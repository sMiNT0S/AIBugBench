# Pre-commit hook configuration for AIBugBench
# Install & activate:
#   pip install pre-commit
#   pre-commit install --hook-type pre-commit
# (Optional) first run on entire repo:
#   pre-commit run --all-files
# Update pinned hook revisions:
#   pre-commit autoupdate

# Global ignore (regex, repo-root anchored)
exclude: |
  (?x)^(
      \.git/
    | \.mypy_cache/
    | \.pytest_cache/
    | \.ruff_cache/
    | __pycache__/
    | \.tox/
    | \.eggs/
    | venv/|\.venv/
    | env/|\.env/
    | build/|dist/
    | site/|htmlcov/|coverage/
  )

repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.1
    hooks:
      - id: ruff
        args: ["--fix"]
        exclude: "^(tests/|submissions/)"
      - id: ruff-format
        exclude: "^(tests/|submissions/)"

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        files: \.(ya?ml)$
        exclude: ^(venv|.git|.ruff_cache|submissions/|.mypy_cache|.pytest_cache|node_modules|dist|build|__pycache__)/
        args: ["-c", ".yamllint.yml"]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        # Scan only tracked Python files that pre-commit passes in
        args: ["-ll", "--configfile", "pyproject.toml"]
        types: [python]
        exclude: >-
          (?x) ^(
            tests/
            | submissions/
            | \.git/
            | \.git/\.pre-commit-cache/
            | \.venv/
            | venv/
            | build/
            | dist/
            | coverage/
            | htmlcov/
            | \.mypy_cache/
            | \.ruff_cache/
            | \.pytest_cache/
            | .*/__pycache__/
          )

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        # run against specific project code, not tests or submissions
        args:
          - --no-error-summary
          - benchmark
          - validation
          - run_benchmark.py
          - scripts
        pass_filenames: false
        additional_dependencies:
          - types-PyYAML>=6.0.0
          - types-requests>=2.32.0
        exclude: "^(tests/|submissions/)"

  # Local/system hooks (use your current Python; no bash required)
  - repo: local
    hooks:
      - id: verify-lock-sync
        name: verify lock files are in sync with requirements (skips on Windows; set FORCE_LOCK_VERIFY=1 to force)
        entry: python scripts/verify_lock_sync.py
        language: python
        language_version: python3.13
        pass_filenames: false
        additional_dependencies:
          - pip-tools==7.5.0
        stages: [pre-commit, pre-push]
        always_run: true

      - id: smoke-pytest
        name: Smoke tests (subset)
        entry: python scripts/smoke_pytest_wrapper.py
        language: system
        pass_filenames: false

      - id: docs-toc-check
        name: README TOC freshness
        entry: python scripts/update_readme_toc.py --check
        language: system
        pass_filenames: false
        files: "^README\\.md$"

      - id: ci-encodings
        name: Ensure YAML/JSON/requirements locks are UTF-8 LF
        entry: python .ci/check_encodings.py
        language: system
        pass_filenames: true
        files: '^(\.github/workflows/.*\.ya?ml|\.ci/.*\.json|requirements.*\.lock)$'

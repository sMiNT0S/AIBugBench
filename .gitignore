# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
*.egg-info/
.installed.cfg
*.egg

# Build and distribution
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
.results/

# Virtual Environments
env/
venv/
ENV/
.venv/
site-packages/

# IDE and Editors (project-wide)
*.swp
*.swo
*~

# OS files
.DS_Store
Thumbs.db

# Development Tools Cache
.ruff_cache/
.mypy_cache/
.pytest_cache/
.pytest_tmp/
.cache
htmlcov/
.tox/

# Test Coverage
.coverage
.coverage.*
nosetests.xml
# coverage.xml (generated) – keep ignored; ensure not tracked
coverage.xml
*.cover
.hypothesis/

# Security and Audit Reports
bandit_report.json
audit_report*.json
*_audit_report.json
# Keep security/audit config files versioned (.safety-project.ini, .semgrepignore, .trufflehogignore, etc.)

# CI Results and Build Artifacts
ci_results/
platform_validation_*.json
build/*.txt
warn-*.txt

# Generated Files and Executables
*.spec

# Results (keep directory, ignore bulk outputs, track latest summary file & gitkeep)
results/**
!results/.gitkeep
!results/latest_results.json

# Development Artifacts and Temporary Files
status/
*.tmp
*.bak
.temp/

# Keep canonical template directory
!submissions/templates/template/

# Developer-specific & transient files
# -------------------------------------------------------------
# Use .git/info/exclude (not committed) for personal/editor/scratch ignores.
# This keeps the shared .gitignore focused on universally generated artifacts.
# Local exclude currently contains (for reference only — do not copy back):
#   .vscode/, .idea/
#   showcase_results.json, *_results.json,
#   temp_test.py, scan_status.ps1, setup-security.ps1, showcase_cli.py
#   test_new_user_experience.ps1, 2025-*.txt
#   .mcp.json
# -------------------------------------------------------------

# Documentation artifacts (exclude planning docs)
docs_private/

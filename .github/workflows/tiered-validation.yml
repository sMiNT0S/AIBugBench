name: Tiered Validation

on:
  push:
    paths:
      - 'submissions/**'
      - 'tests/test_reference_implementations.py'
      - 'tests/test_templates.py'
      - '.github/workflows/tiered-validation.yml'
  pull_request:
    paths:
      - 'submissions/**'
      - 'tests/test_reference_implementations.py'
      - 'tests/test_templates.py'
      - '.github/workflows/tiered-validation.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.13'
  BANDIT_VERSION: '1.8.6'

jobs:
  tier1-reference:
    name: Reference Implementations
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies (pinned security tools)
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install bandit==${{ env.BANDIT_VERSION }}

      - name: Lint reference
        run: |
          if [ -d "submissions/reference_implementations" ]; then
            ruff check submissions/reference_implementations/
          fi

      - name: Security scan
        run: |
          if [ -d "submissions/reference_implementations" ]; then
            bandit -c bandit.yaml -r submissions/reference_implementations/
          fi

      - name: Tests (reference)
        run: pytest tests/test_reference_implementations.py -v

  tier2-templates:
    name: Templates (Non-blocking)
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies (pinned security tools)
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install bandit==${{ env.BANDIT_VERSION }}

      - name: Basic checks
        run: |
          if [ -d "submissions/templates" ]; then
            ruff check submissions/templates/ --config .ruff-tier2.toml || true
            bandit -c bandit-tier2.yaml -r submissions/templates/ || true
          fi

      - name: Tests (templates)
        run: pytest tests/test_templates.py -v || true

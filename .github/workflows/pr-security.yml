name: PR Security Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  BANDIT_VERSION: '1.8.6'

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Setup Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
        with:
          python-version: '3.13'
      - name: Install dev dependencies with hash verification (pinned security tools)
        run: |
          python -m pip install --upgrade pip
          pip install 'pip-tools>=7.5.0'
          pip install --require-hashes -r requirements.lock
          pip install -r requirements-dev.txt
          pip install bandit==${{ env.BANDIT_VERSION }}

      - name: Ruff Security Rules (S rules)
        run: ruff check --select=S .

      - name: Bandit Security Analysis (pinned)
        run: bandit -r . -ll --configfile pyproject.toml

      - name: pip-audit Vulnerability Check
        run: |
          pip-audit --format=json

      - name: Security Audit Script
        run: |
          python scripts/security_audit.py --json --output audit.json || true
          cat audit.json || true
        continue-on-error: true

      - name: Fail if security audit fails
        run: |
          python -c "import json,sys,pathlib;d=json.loads(pathlib.Path('audit.json').read_text());o=bool(d.get('ok'));print('Security Audit OK:',o);sys.exit(0 if o else 1)"
